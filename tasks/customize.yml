---
- name: Create shared resources directory
  file:
    path: "{{ config_dirs.nifi_external_config }}"
    state: "directory"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Update nifi.properties
  lineinfile:
    path: "{{ config_dirs.nifi_home }}/conf/nifi.properties"
    line: "{{ item.key }}={{ item.value }}"
    regexp: "^{{ item.key }}"
  with_dict: "{{ nifi_properties }}"

- name: Update bootstrap.conf
  lineinfile:
    path: "{{ config_dirs.nifi_home }}/conf/bootstrap.conf"
    line: "{{ item.key }}={{ item.value }}"
    regexp: "^{{ item.key }}"
  with_dict: "{{ bootstrap_conf }}"

- name: Copy state-management.xml template
  template:
    src: "templates/state-management.xml.j2"
    dest: "{{ config_dirs.nifi_home }}/conf/state-management.xml"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Copy authorizers.xml template
  template:
    src: "templates/authorizers.xml.j2"
    dest: "{{ config_dirs.nifi_home }}/conf/authorizers.xml"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Update logback.xml
  xml:
    path: "{{ config_dirs.nifi_home }}/conf/logback.xml"
    xpath: "{{ item.key }}"
    value: "{{ item.value }}"
  with_dict: "{{ logback }}"

- name: Update login-identity-providers.xml
  block:
    - replace:
        path: "{{ config_dirs.nifi_home }}/conf/login-identity-providers.xml"
        regexp: "^.*To enable the {{ login_identity_providers['/loginIdentityProviders/provider/identifier'] }}.*$"
        replace: ""
    - xml:
        path: "{{ config_dirs.nifi_home }}/conf/login-identity-providers.xml"
        xpath: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ login_identity_providers }}"
  when: login_identity_providers['/loginIdentityProviders/provider/identifier'] | length

- name: Prepare Zookeeper
  include: zookeeper.yml
  when:
    - nifi_properties['nifi.state.management.embedded.zookeeper.start'] is defined
    - nifi_properties['nifi.state.management.embedded.zookeeper.start'] | bool == true
